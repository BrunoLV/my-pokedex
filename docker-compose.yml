version: '3.8'
services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: mypokedex
      MYSQL_USER: pokedex
      MYSQL_PASSWORD: pokedex
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '3306:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/mysql

  app:
    build: .
    depends_on:
      - db
      - redis
    ports:
      - '8080:8080'
    environment:
      - DATASOURCES_DEFAULT_URL=jdbc:mysql://db:3306/mypokedex
      - DATASOURCES_DEFAULT_USERNAME=pokedex
      - DATASOURCES_DEFAULT_PASSWORD=pokedex
      - MICRONAUT_SERVER_HOST=0.0.0.0
      - MICRONAUT_SERVER_PORT=8080
      - CACHE_STRATEGY=${CACHE_STRATEGY:-caffeine}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - WAIT_FOR_DB=${WAIT_FOR_DB:-true}
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 6
    restart: on-failure

  redis:
    image: redis:7
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 6
    restart: unless-stopped
    profiles:
      - redis

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    profiles:
      - redis

volumes:
  db_data:
